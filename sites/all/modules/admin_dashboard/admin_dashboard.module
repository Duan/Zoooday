<?php
// $Id: admin_dashboard.module,v 1.6 2010/09/09 07:53:03 skilip Exp $

/**
 * @file
 *
 * A control panel for users with administrative rights.
 */

/**
 * Implementation of hook_help().
 */
function admin_dashboard_help($path, $arg) {
  switch ($path) {
    case 'admin/help#admin_dashboard':
    case 'admin/settings/admin_dashboard':
      $output[] = '<p>'. t('The Administration Dashboard module provides privileged users a way to place commonly used menu items, as well blocks, to a dashboard for quick access. The Dashboard will be present on every page, but can be shown and hidden.') .'</p>';
      $output[] = '<p>'. t('If the !menu_icons module is enabled, administrators can upload new icons.', array('!menu_icons' => l('Menu icons', 'http://drupal.org/project/menu_icons'))) .'</p>';
      return join("\n", $output);
  }
}

/**
 * Implementation of hook_perm().
 */
function admin_dashboard_perm() {
  return array('administer administration dashboard', 'access administration dashboard');
}

/**
 * Implementation of hook_menu().
 */
function admin_dashboard_menu() {
  $items['admin/settings/admin_dashboard'] = array(
    'title' => 'Dashboard settings',
    'description' => 'Configure dashboard.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_dashboard_settings_form'),
    'access arguments' => array('administer administration dashboard'),
    'file' => 'admin_dashboard.admin.inc',
  );
  $items['admin_dashboard_ajax_save'] = array(
    'page callback' => 'admin_dashboard_ajax_save',
    'access arguments' => array('access content'),
    'file' => 'admin_dashboard.admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_menu_alter().
 */
function admin_dashboard_menu_alter(&$items) {
  module_load_include('inc', 'admin_dashboard', 'admin_dashboard.admin');
  admin_dashboard_menu_rebuild($items);
}

/**
 * Implementation of hook_theme().
 */
function admin_dashboard_theme() {
  return array(
    'admin_dashboard' => array(
      'arguments' => array(),
      'file' => 'admin_dashboard.theme.inc',
    ),
    'admin_dashboard_submenu' => array(
      'arguments' => array('items' => NULL),
      'file' => 'admin_dashboard.theme.inc',
    ),
  );
}

/**
 * Implementation of hook_footer().
 */
function admin_dashboard_footer() {
  global $user;
  if (!user_access('access administration dashboard')) {
    return;
  }
  return admin_dashboard_menu_content();
}

/**
 * Returns the menu content.
 */
function admin_dashboard_menu_content() {
  $menu = menu_tree_all_data(variable_get('admin_dashboard_menu', 'admin-dashboard'));
  return theme('admin_dashboard', $menu);
}

/**
 * Implementation of system_info_alter()
 */
function admin_dashboard_system_info_alter(&$info, $file) {
  global $theme_key;
  if (isset($info['regions'])) {
    $info['regions']['admin_dashboard'] = 'Dashboard';
  }
}

/**
 * Implementation of hook_init().
 */
function admin_dashboard_init() {
  if (user_access('access administration dashboard')) {
    admin_dashboard_add_js();
  }
}

/**
 * Implementation of hook_preprocess_page().
 */
function admin_dashboard_preprocess_page(&$variables) {
  // Append our dashboard region to the page content.
  $variables['content'] .= '<div id="region_admin_dashboard">'. theme('blocks', 'admin_dashboard') .'</div>';
}

/**
 * Implementation of hook_theme_registry_alter().
 */
function admin_dashboard_theme_registry_alter($theme_registry) {
  // Register our module's block template file into the theme registry.
  $theme_registry['block']['theme paths'][] = drupal_get_path('module', 'admin_dashboard');
}

/**
 * Adds all required settings to Drupal's javascript settings object and loads the required scripts.
 */
function admin_dashboard_add_js() {
  global $user;
  $path = drupal_get_path('module', 'admin_dashboard');

  // Settings are saved seperated for every single user
  $settings = variable_get("admin_dashboard_user_settings_$user->uid", admin_dashboard_default_settings());

  $js_settings = array(
    'admin_dashboard_base_path' => base_path(),
    'admin_dashboard_hide_on_init' => $settings['hide_on_init'],
    'admin_dashboard_at_start' => $settings['at_start'],
    'admin_dashboard_top' => ($settings['top'] > 0 ? $settings['top'] : 0),
    'admin_dashboard_position' => $settings['position'],
    'setting_buttons' => variable_get('admin_dashboard_setting_buttons', array(
      'auto_hide' => array(
        'alt' => t('Enabling this button will auto-hide the dashbaord after page-refreshes'),
        'icon' => ($settings[$user->uid]['hide_on_init']) ? base_path() ."$path/images/auto_hide_icon_enabled.png" : base_path() ."$path/images/auto_hide_icon.png",
      ),
      'settings' => array(
        'alt' => t('Configure the dashboard'),
        'icon' => base_path() ."$path/images/settings_icon.png",
        'href' => url('admin/settings/admin_dashboard'),
      ),
    )),
  );
  drupal_add_js($js_settings, 'setting');
  drupal_add_css("$path/admin_dashboard.css");
  drupal_add_js("$path/admin_dashboard.src.js");
}

/**
 * Used by variable_get to have some default values.
 */
function admin_dashboard_default_settings() {
  return array(
    'hide_on_init' => FALSE,
    'at_start' => FALSE,
    'top' => '150',
    'position' => 'right'
  );
}
